// #include <QApplication>

// #include <iostream>
// #include <string>

// #include <cv.h>
// #include <opencv2/videoio.hpp>
// #include <opencv2/opencv.hpp>
// #include <opencv2/highgui.hpp>


// using namespace cv;
// using namespace std;


// int main(int argc, char *argv[])
// {
//     QApplication a(argc, argv);

//      Mat src = imread( "budismo-buda.jpg", IMREAD_GRAYSCALE );
//      Mat dst;

//      //Apply median filter
//      medianBlur ( src, dst, 7 );
//      imshow("source", src);
//      imshow("result", dst);

//      waitKey(0);


//     // Código para criar uma trackbar e fazer BITWISE AND na imagem, com um escalar
//     /*
//     int thresh = 127;
//     cv::Mat img = cv::imread("budismo-buda.jpg", IMREAD_GRAYSCALE);
//     Mat bin;
//     namedWindow("bin", WINDOW_KEEPRATIO);
//     createTrackbar("thresh", "bin", &thresh, 255, 0);
//     for (;;)
//     {
//         bin = img > thresh;
//         imshow("bin", bin);
//         if ((char) waitKey(1) == 'q') break;
//     }
//     */

//     // Preencher uma matriz 3x3 com 127 e printar na tela
//     /*
//     Mat img = 127 * Mat::ones(3,3,CV_8U);
//     cout << img << endl;
//     */

//     // Preencher uma matriz 500x500 com números aleatórios normalmente distribuídos
//     /*
//     Mat img = Mat::zeros(500,500,CV_8UC1);
//     cv::randn(img,0,255);
//     imshow("img", img);
//     waitKey(0);
//     */

//     // Subtrair duas imagens e pegar o módulo para exibir na tela
//     /*
//     int sum = 0;
//     cv::Mat img = cv::imread("lena.png", IMREAD_COLOR);
//     cv::Mat img2 = cv::imread("512buda.png", IMREAD_COLOR);
//     Mat bin;
//     namedWindow("bin", WINDOW_KEEPRATIO);
//     bin = abs(img - img2);
//     imshow("bin", bin);
//     */

//     //Somar uma imagem com um valor escalar nos três canais (RGB)
//     /*
//     int sum = 127;
//     cv::Mat img = cv::imread("budismo-buda.jpg", IMREAD_COLOR);
//     Mat bin;
//     namedWindow("bin", WINDOW_KEEPRATIO);
//     createTrackbar("sum", "bin", &sum, 255, 0);
//     for (;;)
//     {
//         bin = img + Scalar(sum,sum,sum);
//         imshow("bin", bin);
//         if ((char) waitKey(1) == 'q') break;
//     }
//     */

//     //Somar duas imagens utilizando alpha e beta e a função addWeighted
//     /*
//     int alpha = 0;
//     int beta = 0;
//     cv::Mat src1 = cv::imread("512buda.png", IMREAD_COLOR);
//     cv::Mat src2 = cv::imread("lena.png", IMREAD_COLOR);
//     namedWindow("bin", WINDOW_KEEPRATIO);
//     createTrackbar("alpha", "bin", &alpha, 255, 0);
//     for (;;)
//     {
//         Mat dst;
//         beta = ( 255 - alpha );
//         addWeighted( src1, (double)alpha/255, src2, (double)beta/255, 0.0, dst);
//         imshow( "bin", dst );
//         if ((char) waitKey(1) == 'q') break;
//     }
//     */

//     return a.exec();
// }

